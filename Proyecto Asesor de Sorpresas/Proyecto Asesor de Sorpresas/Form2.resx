<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gMUAgAe9ghDPAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAP1SURBVFhH
        7ZXvbxN1HMenPPeRf4GgCYlPTEzwEQx/hMSBgxg0aFARNUxjKBWNrNMtMQSEBII6I4ZgJqUxMMc6EUZL
        sbOUrbTdXdd2ldrS/WrXa3vXn1uvY+3H+1yuZ293drfRPfOTvHLt99f7lc990zYN6HZqBjpaoYqxfXtY
        f3AzNIILBzezTcvV/wKrEbh4aAtcPvKC4lwtayKA4eGhDyEV+Ax6dS8qrqmyJgKBGx9AKdHFk/AdBoO2
        WXEd0nCB346+LIZXcejfUFyLNFzAfv51mUDQckBxLfLQAv1d2+D6ie3w+/EW+OXTrWA63SoTIPreAQN3
        L7A7/NpjLY0TCFnbxCCW6oSxgXch6tKIY/lJHQz37IHCdIc4lo20SwSSUeeeUMizMBkhGABYJ8T+W2oF
        qrgu7eUvH4bazr0GbLxTMr9UYGqCSI75AzD+lw+ESGnVE/Bd3S85HIm6NfxvAL4Wj3GfbJ7yHpYI3At6
        KygQuU/mhEhp1RMwnZK/c+bvz8UApQ4Rv74tzpu+a6MwHIlOuixCpLTqCSB3DW9CsabN6ToCwVsH+AtZ
        nQ+OXo1VBeIz7ueFSGktJ4Bgy81ndsIf37/KP6vj+BpwzPLtLrjSuU2yB4mEXEUMx9cgxMlLjcBqwYuH
        ApMTBCXEyWutBGwXOsT2x6ZdeiFOXmslEPabExjuHR8HinI+IcTJa1UCmi0V49HdzO0e7YTvxonglPun
        IBO+cn8uPhgtpkx0MWlOTkTIMgqEQiSUMrbj86nhTUKktNQKXD+5l0rc6w0v5i0szJkBKSd7oUL38Z+X
        4g/4hdvvEMcqhZvlxZw1sZD50ww521OqBaxnP5qqFCyV2gB2tAvoM+uB/mYDlHxf82PlVB/M2zTAOnVQ
        zlyD+bQVFrK3xD1SLBWWsbeoEvDf7L7DCUgOKDqOQIn8Clj3lzw4lh/YDelzzwLTvRGKdq1k/VLK3Hn5
        lKtNlcDg6feGMnEC5ugReJCzcq2UylRZnOmBCtMP5cRlKM8aZPO470F2COZSI4DnZRPEk6oEDNqtgfQs
        yXJALVnKDfmEEwopB8zTw1Bk7FBK2/gnfi8kHZDj5rPUqGSfQJb7d3xE9SWkp51jCoc8BB6r6kuIeE1n
        bcoHrZIYeWhFAhe1zQw942pMF2KknWv/oysSQK6dfAu7UJIduDIKGcq7ng/HMn7xyjNc8JAaAcRr+nFQ
        4VDVZGLE+0K0tFDE2NHa09++I6AUXIvtZ91gZtYzqxRQh6kMRbwkxP13GT7Z8bj+4+bnluPOpWMb0nFS
        rxCkxHmaHnlMiGhsMXHP05m4Zz8TJ3/gglwcOY67XIe6uee+VMy9UViqUE1N/wDFLlXQH8fKPQAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>